{"version":3,"sources":["store/store.ts","utils/constants.ts","utils/axiosService.ts","api/todos.ts","store/todos/store.ts","store/todos/index.tsx","utils/globalStyle.ts","utils/validations.ts","components/TodoInput.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/TodoPlaceholder.tsx","components/Todo.tsx","App.tsx","index.tsx"],"names":["Store","toaster","message","this","notify","success","warning","danger","API_ENDPOINTS","all","id","API_PARAMS","axiosService","axios","create","baseURL","timeout","headers","fetchTodos","a","get","createTodo","title","post","userId","completed","updateTodo","patch","deleteTodo","delete","TodosStore","todos","fetching","makeObservable","observable","action","toggleFetching","data","runInAction","console","error","map","el","find","filter","TodosStateContext","createContext","store","TodosStateProvider","children","Provider","value","GlobalStyle","createGlobalStyle","trim","Form","styled","form","TodoInput","disabled","onSubmit","useForm","defaultValues","register","handleSubmit","reset","submit","useCallback","Pane","display","width","marginBottom","TextInput","name","placeholder","size","height","ref","required","validate","Button","type","marginLeft","appearance","TodoItem","useState","setTitle","editing","setEditing","renderText","useMemo","Text","renderTextInput","spellCheck","onChange","evt","target","renderView","Card","alignItems","justify-content","border","padding","flex","IconButton","icon","EditIcon","marginRight","onClick","prev","TrashIcon","intent","Ul","ul","Li","li","TodoList","TodoPlaceholder","Spinner","marginX","TodoContainer","section","Todo","observer","useContext","useEffect","autorun","elevation","background","Heading","AppContainer","div","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f17553a8.chunk.js","sourcesContent":["import { toaster } from 'evergreen-ui';\n\nexport default class Store {\n  private toaster = toaster;\n\n  protected info(message: string) {\n    this.toaster.notify(message);\n  }\n\n  protected success(message: string) {\n    this.toaster.success(message);\n  }\n\n  protected warning(message: string) {\n    this.toaster.warning(message);\n  }\n\n  protected danger(message: string) {\n    this.toaster.danger(message);\n  }\n}\n","export const API_BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const API_ENDPOINTS = {\n  todos: {\n    all: '/todos?userId=1',\n    id: (id: number) => `/todos/${id}`,\n  },\n};\n\nexport const API_PARAMS = {\n  userId: 1,\n  completed: false,\n};\n","import axios from 'axios';\n\nimport { API_BASE_URL } from './constants';\n\nconst axiosService = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default axiosService;\n","import { AxiosResponse } from 'axios';\n\nimport { Todo } from '@react-mobx-todo';\n\nimport axiosService from '../utils/axiosService';\nimport { API_ENDPOINTS, API_PARAMS } from '../utils/constants';\n\nexport const fetchTodos = async (): Promise<\n  AxiosResponse<Todo[]>\n> => {\n  return await axiosService.get(API_ENDPOINTS.todos.all);\n};\n\nexport const createTodo = async (\n  title: string,\n): Promise<AxiosResponse<Todo>> => {\n  return await axiosService.post(API_ENDPOINTS.todos.all, {\n    title,\n    userId: API_PARAMS.userId,\n    completed: API_PARAMS.completed,\n  });\n};\n\nexport const updateTodo = async (\n  id: number,\n  title: string,\n): Promise<AxiosResponse<Todo>> => {\n  return await axiosService.patch(API_ENDPOINTS.todos.id(id), {\n    title,\n  });\n};\n\nexport const deleteTodo = async (\n  id: number,\n): Promise<AxiosResponse<void>> => {\n  return await axiosService.delete(API_ENDPOINTS.todos.id(id));\n};\n","import {\n  makeObservable,\n  observable,\n  action,\n  runInAction,\n} from 'mobx';\n\nimport { Todo } from '@react-mobx-todo';\n\nimport Store from '../store';\n\nimport {\n  fetchTodos,\n  createTodo,\n  updateTodo,\n  deleteTodo,\n} from '../../api/todos';\n\nexport default class TodosStore extends Store {\n  todos: Todo[] = [];\n  fetching: boolean = false;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      todos: observable,\n      fetching: observable,\n      fetchTodos: action,\n      createTodo: action,\n      updateTodo: action,\n      deleteTodo: action,\n    });\n  }\n\n  async fetchTodos() {\n    this.toggleFetching();\n\n    const { data } = await fetchTodos();\n\n    runInAction(() => {\n      this.todos = data;\n    });\n\n    this.toggleFetching();\n  }\n\n  async createTodo(title: string) {\n    try {\n      const { data } = await createTodo(title);\n\n      runInAction(() => {\n        this.todos = [...this.todos, data];\n      });\n\n      this.success('Item added successfully!');\n    } catch (err: unknown) {\n      console.error(err);\n\n      this.danger('Error while adding item!');\n    }\n  }\n\n  async updateTodo(id: number, title: string) {\n    try {\n      const { data } = await updateTodo(id, title);\n\n      runInAction(() => {\n        this.todos = this.todos.map((el) => {\n          return el.id === data.id ? data : el;\n        });\n      });\n\n      this.success('Item updated successfully!');\n    } catch (err: unknown) {\n      console.error(err);\n\n      this.danger('Error while updating item!');\n    }\n  }\n\n  async deleteTodo(id: number) {\n    try {\n      await deleteTodo(id);\n\n      const data = this.todos.find((el) => el.id === id) as Todo;\n\n      runInAction(() => {\n        this.todos = this.todos.filter((el) => el.id !== data.id);\n      });\n\n      this.success('Item deleted successfully!');\n    } catch (err: unknown) {\n      console.error(err);\n\n      this.danger('Error while deleting item!');\n    }\n  }\n\n  private toggleFetching() {\n    runInAction(() => {\n      this.fetching = !this.fetching;\n    });\n  }\n}\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useContext,\n} from 'react';\n\nimport TodosStore from './store';\n\ntype TodosContextValue = {\n  store: TodosStore;\n};\n\nconst TodosStateContext = createContext<TodosContextValue>(\n  {} as TodosContextValue,\n);\n\nconst store = new TodosStore();\n\nexport const TodosStateProvider: React.FC<PropsWithChildren<{}>> = ({\n  children,\n}) => (\n  <TodosStateContext.Provider value={{ store }}>\n    {children}\n  </TodosStateContext.Provider>\n);\n\nexport const useTodosStore = () => {\n  return useContext(TodosStateContext);\n};\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n      box-sizing: border-box;\n  }\n\n  html {\n    font-size: 16px;\n  }\n\n  body {\n    margin: 0;\n    padding: 1rem;\n    min-height: 100vh;\n    background-color: #fafafa;\n  }\n`;\n\nexport default GlobalStyle;\n","export const trim = (value: string) => !!value.trim();\n","import React, { useCallback } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport styled from 'styled-components';\nimport { Pane, TextInput, Button } from 'evergreen-ui';\n\nimport { TodoDraft } from '@react-mobx-todo';\n\nimport { trim } from '../utils/validations';\n\ntype TodoInputProps = {\n  disabled: boolean;\n  onSubmit: ({ title }: TodoDraft) => void;\n};\n\nconst Form = styled.form`\n  width: 100%;\n`;\n\nconst defaultValuesFactory = () => {\n  return { title: '' };\n};\n\nconst TodoInput: React.FC<TodoInputProps> = ({\n  disabled,\n  onSubmit,\n}: TodoInputProps) => {\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: defaultValuesFactory(),\n  });\n\n  const submit = useCallback(\n    ({ title = '' }: TodoDraft) => {\n      onSubmit({ title });\n      reset(defaultValuesFactory());\n    },\n    [onSubmit, reset],\n  );\n\n  return (\n    <Form onSubmit={handleSubmit(submit)}>\n      <Pane display=\"flex\" width=\"100%\" marginBottom={8}>\n        <TextInput\n          name=\"title\"\n          placeholder=\"Enter the task name...\"\n          size={400}\n          height={32}\n          width=\"100%\"\n          disabled={disabled}\n          ref={register({\n            required: true,\n            validate: trim,\n          })}\n        />\n\n        <Button\n          type=\"submit\"\n          marginLeft={8}\n          appearance=\"primary\"\n          disabled={disabled}\n        >\n          Add\n        </Button>\n      </Pane>\n    </Form>\n  );\n};\n\nexport default TodoInput;\n","import React, { useState, useMemo, ChangeEvent } from 'react';\nimport {\n  Card,\n  Pane,\n  Text,\n  TextInput,\n  IconButton,\n  EditIcon,\n  TrashIcon,\n} from 'evergreen-ui';\n\nimport { Todo, TodoDraft } from '@react-mobx-todo';\n\nimport { trim } from '../utils/validations';\n\ntype TodoItemProps = {\n  data: Todo;\n  updateTodo: ({ id, title }: TodoDraft) => void;\n  deleteTodo: ({ id }: TodoDraft) => void;\n};\n\nconst TodoItem: React.FC<TodoItemProps> = ({\n  data,\n  updateTodo,\n  deleteTodo,\n}: TodoItemProps) => {\n  const [title, setTitle] = useState(data.title);\n  const [editing, setEditing] = useState(false);\n\n  const renderText = useMemo(() => {\n    return <Text size={400}>{title}</Text>;\n  }, [title]);\n\n  const renderTextInput = useMemo(() => {\n    const onChange = (evt: ChangeEvent<HTMLInputElement>) => {\n      setTitle(evt.target.value);\n    };\n\n    return (\n      <TextInput\n        value={title}\n        spellCheck={true}\n        width=\"100%\"\n        onChange={onChange}\n      />\n    );\n  }, [title]);\n\n  const renderView = useMemo(() => {\n    return editing ? renderTextInput : renderText;\n  }, [editing, renderTextInput, renderText]);\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onEditClick = () => {\n    if (editing) {\n      trim(title)\n        ? updateTodo({ id: data.id, title })\n        : setTitle(data.title);\n    }\n\n    toggleEditing();\n  };\n\n  const onDeleteClick = () => {\n    deleteTodo({ id: data.id });\n  };\n\n  return (\n    <Card\n      display=\"flex\"\n      alignItems=\"center\"\n      justify-content=\"space-between\"\n      border=\"default\"\n      padding={8}\n      marginBottom={8}\n    >\n      <Pane display=\"flex\" flex=\"1\">\n        {renderView}\n      </Pane>\n\n      <Pane display=\"flex\" marginLeft={8}>\n        <IconButton\n          icon={EditIcon}\n          height={24}\n          marginRight={8}\n          onClick={onEditClick}\n        />\n\n        <IconButton\n          icon={TrashIcon}\n          height={24}\n          intent=\"danger\"\n          onClick={onDeleteClick}\n        />\n      </Pane>\n    </Card>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Todo, TodoDraft } from '@react-mobx-todo';\n\nimport TodoItem from './TodoItem';\n\nconst Ul = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\nconst Li = styled.li`\n  list-style: none;\n`;\n\ntype TodoListProps = {\n  data: Todo[];\n  updateTodo: ({ id, title }: TodoDraft) => void;\n  deleteTodo: ({ id }: TodoDraft) => void;\n};\n\nconst TodoList: React.FC<TodoListProps> = ({\n  data,\n  updateTodo,\n  deleteTodo,\n}: TodoListProps) => (\n  <Ul>\n    {data.map((el) => (\n      // using the title as a key because the IDs can be duplicates\n      // see https://jsonplaceholder.typicode.com/guide/\n      <Li key={el.title}>\n        <TodoItem\n          data={el}\n          updateTodo={updateTodo}\n          deleteTodo={deleteTodo}\n        />\n      </Li>\n    ))}\n  </Ul>\n);\n\nexport default TodoList;\n","import React from 'react';\nimport { Spinner } from 'evergreen-ui';\n\nconst TodoPlaceholder: React.FC = () => {\n  return <Spinner size={32} marginX=\"auto\" />;\n};\n\nexport default TodoPlaceholder;\n","import React, { useEffect, useMemo, useCallback } from 'react';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react-lite';\n\nimport styled from 'styled-components';\nimport { Pane, Heading } from 'evergreen-ui';\n\nimport { TodoDraft } from '@react-mobx-todo';\n\nimport { useTodosStore } from '../store/todos';\n\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\nimport TodoPlaceholder from './TodoPlaceholder';\n\nconst TodoContainer = styled.section`\n  width: 100%;\n  max-width: 500px;\n  margin-top: 50px;\n`;\n\nconst Todo: React.FC = observer(() => {\n  const { store } = useTodosStore();\n\n  useEffect(() => {\n    autorun(() => {\n      store.fetchTodos();\n    });\n  }, [store]);\n\n  const createTodo = useCallback(\n    ({ title = '' }: TodoDraft) => {\n      store.createTodo(title);\n    },\n    [store],\n  );\n\n  const updateTodo = useCallback(\n    ({ id = 0, title = '' }: TodoDraft) => {\n      store.updateTodo(id, title);\n    },\n    [store],\n  );\n\n  const deleteTodo = useCallback(\n    ({ id = 0 }: TodoDraft) => {\n      store.deleteTodo(id);\n    },\n    [store],\n  );\n\n  const renderView = useMemo(() => {\n    return store.fetching ? (\n      <TodoPlaceholder />\n    ) : (\n      <TodoList\n        data={store.todos}\n        updateTodo={updateTodo}\n        deleteTodo={deleteTodo}\n      />\n    );\n  }, [store.fetching, store.todos, updateTodo, deleteTodo]);\n\n  return (\n    <TodoContainer>\n      <Pane elevation={1} padding={16} background=\"white\">\n        <Pane marginBottom={16}>\n          <Heading size={800}>Todo List</Heading>\n        </Pane>\n\n        <Pane marginBottom={16}>\n          <TodoInput\n            disabled={store.fetching}\n            onSubmit={createTodo}\n          />\n        </Pane>\n\n        <Pane>{renderView}</Pane>\n      </Pane>\n    </TodoContainer>\n  );\n});\n\nexport default Todo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport GlobalStyle from './utils/globalStyle';\n\nimport Todo from './components/Todo';\n\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <AppContainer className=\"app\">\n      <GlobalStyle />\n      <Todo />\n    </AppContainer>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { TodosStateProvider } from './store/todos';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodosStateProvider>\n      <App />\n    </TodosStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}